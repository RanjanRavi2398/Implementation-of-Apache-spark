{"version":"NotebookV1","origId":4259324615413652,"name":"preprocessing","language":"python","commands":[{"version":"CommandV1","origId":4259324615413653,"guid":"fdd7c81c-d272-406f-a84a-f01a3232f344","subtype":"command","commandType":"auto","position":1.0,"command":"\n%md\n##### Load `health_tracker_sample_agg_pd_df` Pandas DataFrame","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"ed59ad97-6e33-4897-b4e6-9633086ca00f"},{"version":"CommandV1","origId":4259324615413654,"guid":"6abedde9-7f3e-4e5a-95a6-acf929cded24","subtype":"command","commandType":"auto","position":2.0,"command":"health_tracker_sample_agg_pd_df = (\n  spark.read\n  .format(\"delta\")\n  .load(goldPath + \"health_tracker_sample_agg\")\n  .toPandas()\n)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"02ca99cb-e1a5-4c56-ac72-1ab0eb4aacd6"},{"version":"CommandV1","origId":4259324615413655,"guid":"2db4afeb-ceb8-4b8f-9283-6a19c5a692bf","subtype":"command","commandType":"auto","position":3.0,"command":"%md\n### Load Scipy Libraries","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e37f7988-ad4b-4838-8dac-3be31b442675"},{"version":"CommandV1","origId":4259324615413656,"guid":"c59c13e4-8d5f-44a0-8fc7-8429f9548776","subtype":"command","commandType":"auto","position":4.0,"command":"import matplotlib.pyplot as plt\nimport mlflow\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"dce41182-ac15-47ca-b588-60fd1cb8f80f"},{"version":"CommandV1","origId":4259324615413657,"guid":"1dc05822-b196-4e58-be10-d3bc770fc918","subtype":"command","commandType":"auto","position":5.0,"command":"%md\n### Define Scipy Utility Functions","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"90ad0ad5-55c5-4e6a-9e3a-7e28df5354b9"},{"version":"CommandV1","origId":4259324615413658,"guid":"701a3b6a-90d3-4a47-a2ca-4167aac015dc","subtype":"command","commandType":"auto","position":6.0,"command":"%md\n###### `scatter_plot_with_decision_boundary(ax, features, target, model)`","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"84785013-416f-47f0-892c-24f1a1dc11a7"},{"version":"CommandV1","origId":4259324615413659,"guid":"5cc47630-4674-40a8-826b-f5c6905c0b0a","subtype":"command","commandType":"auto","position":7.0,"command":"def scatter_plot_with_decision_boundary(ax, features, target, model):\n    mesh_step_size = 1\n\n    x_min, x_max = features[0].min() - .5, features[0].max() + .5\n    y_min, y_max = features[1].min() - .5, features[1].max() + .5\n    xx, yy = np.meshgrid(\n      np.arange(x_min, x_max, mesh_step_size),\n      np.arange(y_min, y_max, mesh_step_size)\n    )\n    Z = model.predict(np.c_[xx.ravel(), yy.ravel()])\n\n    for color, lifestyle in zip(\n      (\"blue\", \"orange\", \"green\"),\n      ('weight trainer', 'cardio trainer', 'sedentary')):\n        two_dim_per_lifestyle = features[target.lifestyle == lifestyle]\n        two_dim_per_lifestyle.plot(x=0, y=1, kind=\"scatter\", c=color, label=lifestyle, ax=ax)\n    Z = Z.reshape(xx.shape)\n    ax.pcolormesh(xx, yy, Z, cmap=plt.cm.Paired, alpha=0.3)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"6654d572-5bdc-4bd6-9894-b4727e089122"},{"version":"CommandV1","origId":4259324615413660,"guid":"7236e397-f3f5-4f87-8785-b969b529cb75","subtype":"command","commandType":"auto","position":8.0,"command":"%md\n###### `generate_feature_subsets(df)`","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b0119037-fbd3-49c2-991c-8bc9bc96dcb5"},{"version":"CommandV1","origId":4259324615413661,"guid":"9623781d-9860-4396-86d4-b2a05e5014d8","subtype":"command","commandType":"auto","position":9.0,"command":"from itertools import combinations\n\ndef generate_feature_subsets(df):\n  feature_columns = df.select_dtypes(exclude=[\"object\"]).columns\n  feature_subsets = []\n  for i in range(1, 5):\n    feature_subsets += [list(feat) for feat in combinations(feature_columns, i)]\n  return feature_subsets","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5b492dbd-6ed4-4ee8-b53e-0209cce6a2a1"},{"version":"CommandV1","origId":4259324615413662,"guid":"a409e7e5-cc04-4edd-86eb-f669c39d2796","subtype":"command","commandType":"auto","position":10.0,"command":"%md\n###### `generate_bootstrap_sample(df, lifestyles, n=5)`","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"cf3fd81e-f2e3-4136-aa26-25ecf857a048"},{"version":"CommandV1","origId":4259324615413663,"guid":"ebbe0bff-f10b-40cd-b8bd-cbae2859a329","subtype":"command","commandType":"auto","position":11.0,"command":"def generate_bootstrap_sample(df, lifestyles, n=5):\n  sample_df_list = []\n  for lifestyle in lifestyles:\n    sample_df_list.append(\n      df[df.lifestyle == lifestyle].sample(n, replace=True)\n    )\n  return pd.concat(sample_df_list)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3f901a0d-b51e-40b6-940b-e95ab6d21953"},{"version":"CommandV1","origId":4259324615413664,"guid":"ff4b96d1-f99a-4f93-a1e7-b1d9c2f732bb","subtype":"command","commandType":"auto","position":12.0,"command":"%md\n###### `generate_subsample_sets(df, lifestyles)`","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c1e3a793-b285-41e8-bfa7-5d17d91c06dd"},{"version":"CommandV1","origId":4259324615413665,"guid":"19fa04a6-3460-470a-8e41-51a493fc7af0","subtype":"command","commandType":"auto","position":13.0,"command":"from sklearn.preprocessing import LabelEncoder\n\ndef generate_subsample_sets(df, lifestyles):\n  sample_sets = [generate_bootstrap_sample(df, lifestyles) for _ in range(10)]\n  le = LabelEncoder()\n  le.fit(df.lifestyle)\n\n  for sample_set in sample_sets:\n    sample_set[\"lifestyle_encoded\"] = le.transform(sample_set.lifestyle)\n\n  return sample_sets","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"4e48a601-d061-4ac7-9183-254a37eeff52"},{"version":"CommandV1","origId":4259324615413666,"guid":"8093bac1-240c-4a02-8fdc-734ecb70d73e","subtype":"command","commandType":"auto","position":14.0,"command":"%md\n###### `experiment_runner(feature_subset, model, param_grid={})`","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"3aa86d55-5a71-41f7-a88d-447f1bf4843f"},{"version":"CommandV1","origId":4259324615413667,"guid":"5afc73a6-e818-4902-9f22-8142669eee45","subtype":"command","commandType":"auto","position":15.0,"command":"from sklearn.model_selection import GridSearchCV\nfrom sklearn.tree import DecisionTreeClassifier\n\ndef experiment_runner(feature_subset, model, param_grid={}):\n  \"\"\"Helper function to run MLflow experiment on a feature subset.\"\"\"\n  with mlflow.start_run() as run:\n    \"Build Subsets of Features.\"\n    experimental_data_subsets = [\n        sample_set[feature_subset]\n        for sample_set in sample_sets\n    ]\n\n    targets = [\n      sample_set[\"lifestyle_encoded\"]\n      for sample_set in sample_sets\n    ]\n\n    \"Fit on each subset using LOO Cross-Validation.\"\n    experimental_scores = []\n    for features, target in zip(experimental_data_subsets, targets):\n      gs = GridSearchCV(model, param_grid=param_grid, cv=5)\n      gs.fit(features, target)\n      score = gs.cv_results_[\"mean_test_score\"][0]\n      experimental_scores.append(score)\n\n    \"Record experiment results.\"\n    mlflow.log_param(\"subset\", feature_subset)\n    model_name = (\n      str(model.__class__)\n      .split(\".\")[-1]\n      .replace(\"'>\",\"\")\n    )\n    mlflow.log_param(\"model\", model_name)\n    mlflow.log_metric(\"mean score\", np.mean(experimental_scores))\n    mlflow.log_metric(\"std score\", np.std(experimental_scores))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"529be946-e7c0-4ceb-a5a5-f812f0b32f38"},{"version":"CommandV1","origId":4259324615413668,"guid":"0da2a0d4-3c41-4013-bd5e-1f75c7585889","subtype":"command","commandType":"auto","position":16.0,"command":"%md\n###### `retrieve_results(metrics, params)`","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b3f97da4-a99f-4ebb-a8d4-e623fde6706f"},{"version":"CommandV1","origId":4259324615413669,"guid":"f394bcb1-5711-4802-b8df-c332d0c10fff","subtype":"command","commandType":"auto","position":17.0,"command":"def retrieve_results(metrics, params):\n  results = mlflow.search_runs()\n  keys = []\n  for metric in metrics:\n    keys.append(\"metrics.\" + metric)\n  for param in params:\n    keys.append(\"params.\" + param)\n  results = results[keys]\n  results.dropna(inplace=True)\n  results.drop_duplicates(inplace=True)\n  return results\n","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":"579109183679732","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"387ae6cd-89b9-4686-9b6f-414047f7c600"}],"dashboards":[],"guid":"ba337eec-055c-4b17-911b-8d91f23361dd","globalVars":{},"iPythonMetadata":null,"inputWidgets":{}}